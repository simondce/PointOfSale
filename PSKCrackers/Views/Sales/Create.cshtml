@model PSKCrackers.Models.Sale

@{
    ViewData["Title"] = "Create";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h1>Create</h1>

<h4>Sale</h4>
<!-- Available Stock Section -->
<div class="container mt-4">
    <div class="row">
        <!-- Available Stock Section -->
        <div class="col-lg-4">
            <h2>Available Stock</h2>
            <table class="table table-striped" id="availableStockTable">
                <thead>
                    <tr>
                        <th style="display:none;">ProductID</th>
                        <th>Product</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Stocck items will be dynamically added here -->
                </tbody>
            </table>
        </div>

        <!-- Cart Items Section -->
        <div class="col-lg-4">
            <h2>Cart Items</h2>
            <table class="table table-striped" id="cartTable">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Subtotal</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Cart items will be dynamically added here -->
                </tbody>
            </table>
        </div>

        <!-- Total Amount Calculation Section -->
        <div class="col-lg-4">
        <h2>Total Amount Calculation</h2>
        <table class="table" id="totalAmountTable">
            <tbody>
                <tr>
                    <td>Customer:</td>
                    <td>
                        <select id="SelectedCustomer" asp-for="CustomerId" class="form-control" asp-items="ViewBag.CustomerId"></select>
                    </td>
                </tr>
                <tr>
                    <td>Total Amount:</td>
                    <td id="totalAmount">₹0.00</td>
                </tr>
                <tr>
                    <td>Discount %:</td>
                    <td>
                        <input type="number" id="discount" class="form-control">
                    </td>
                </tr>
                <tr>
                    <td>Discounted Total:</td>
                    <td id="calculatedTotal">₹0.00</td>
                </tr>
            </tbody>
        </table>
            <button type="button" class="btn btn-primary" id="SaveInvoice">Save Invoice</button> <!-- Add Print Invoice button -->
            <button type="button" class="btn btn-primary" id="printInvoice">Print Invoice</button> <!-- Add Print Invoice button -->
    </div>
</div>
</div>


<div>
    <a asp-action="Index" class="btn btn-cancel">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            // Sample available stock data (you can load this data dynamically)
            //var availableStock = JSON.parse('@Html.Raw(Json.Serialize(ViewBag.AvailableStock))');
            var availableStock = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(
            ViewBag.AvailableStock,
            Newtonsoft.Json.Formatting.None,new Newtonsoft.Json.JsonSerializerSettings{
            ReferenceLoopHandling = Newtonsoft.Json.ReferenceLoopHandling.Ignore
            }));

            // Initialize the cart as an empty array
            const cart = [];

            // Function to populate the available stock table
            function populateAvailableStockTable() {
                const table = $("#availableStockTable");
                table.find("tr:gt(0)").remove(); // Clear existing rows
                availableStock.forEach(item => {
                    table.append(`<tr><td style="display:none;">${item.Product.ProductId}</td><td>${item.Product.Name}</td><td>₹${item.Product.Price.toFixed(2)}</td><td>${item.QuantityInStock}</td><td><button type="button" class="btn btn-success">Add</button></td></tr>`);
                });
            }


            // Function to populate the cart table and update total amount
            function updateCartAndTotal() {
                const table = $("#cartTable");
                table.find("tr:gt(0)").remove(); // Clear existing rows
                let totalAmount = 0;

                cart.forEach(item => {
                    const subtotal = item.Product.Price * item.QuantityInCart;
                    totalAmount += subtotal;
                    const row = `<tr data-productid="${item.Product.ProductId}">
                                                <td>${item.Product.Name}</td>
                                                <td>₹${item.Product.Price.toFixed(2)}</td>
                                                <td>
                                                    <span class="cart-quantity">${item.QuantityInCart}</span>
                                                    <button class="btn btn-sm btn-primary reduce-quantity" data-productid="${item.Product.ProductId}">-</button>
                                                </td>
                                                <td>₹${subtotal.toFixed(2)}</td>
                                                <td><button class="btn btn-sm btn-danger remove-item" data-productid="${item.Product.ProductId}">Remove</button></td>
                                            </tr>`;
                    table.append(row);
                });

                // Update the total amount
                var discVal = $("#discount").val();
                if (!discVal || discVal == "") { discVal = "0"; }
                const discountPercentage = parseFloat(discVal);
                const discountAmount = (discountPercentage / 100) * totalAmount; // Calculate discount amount
                const discountedTotalAmount = totalAmount - discountAmount; // Apply discount
                $("#totalAmount").text(`₹${totalAmount.toFixed(2)}`);

                // Update the calculated total with discount applied
                $("#calculatedTotal").text(`₹${discountedTotalAmount.toFixed(2)}`);
            }

            // Add item to the cart when a row in available stock is clicked
            $("#availableStockTable").on("click", "tr", function () {
                const row = $(this);
                const productId = row.find("td:first").text();
                const product = availableStock.find(item => item.ProductId === parseInt(productId));

                if (product && product.QuantityInStock > 0) {
                    // Check if the product is already in the cart
                    const cartItemIndex = cart.findIndex(item => item.Product.ProductId === product.ProductId);

                    if (cartItemIndex !== -1) {
                        // If the product is in the cart, increase its quantity by 1
                        cart[cartItemIndex].QuantityInCart++;
                    } else {
                        // If the product is not in the cart, add it with a quantity of 1
                        const cartItem = { ...product, QuantityInCart: 1 }; // Clone the item
                        cart.push(cartItem);
                    }
                    // Decrease available quantity by 1
                    product.QuantityInStock--;

                    updateCartAndTotal();
                    populateAvailableStockTable();
                }
            });

            // Handle discount input change
            $("#discount").on("input", function () {
                updateCartAndTotal();
            });

            function getCurrentDateFormatted() {
                const months = [
                    "January", "February", "March", "April", "May", "June",
                    "July", "August", "September", "October", "November", "December"
                ];

                const currentDate = new Date();
                const month = months[currentDate.getMonth()];
                const day = currentDate.getDate();
                const year = currentDate.getFullYear();

                return `${month} ${day}, ${year}`;
            }

            // Reduce quantity of an item when the "-" button is clicked
            $("#cartTable").on("click", ".reduce-quantity", function () {
                const productId = $(this).data("productid");
                const cartItem = cart.find(item => item.Product.ProductId === productId);

                if (cartItem && cartItem.QuantityInCart > 1) {
                    // Reduce the quantity by 1
                    cartItem.QuantityInCart--;
                    // Increase available quantity by 1
                    const product = availableStock.find(item => item.ProductId === productId);
                    product.QuantityInStock++;
                    updateCartAndTotal();
                    populateAvailableStockTable();
                }
            });

            // Remove item from the cart when the "Remove" button is clicked
            $("#cartTable").on("click", ".remove-item", function () {
                const productId = $(this).data("productid");
                const cartItemIndex = cart.findIndex(item => item.Product.ProductId === productId);

                if (cartItemIndex !== -1) {
                    // Increase available quantity
                    const product = availableStock.find(item => item.ProductId === productId);
                    product.QuantityInStock += cart[cartItemIndex].QuantityInCart;

                    // Remove the item from the cart
                    cart.splice(cartItemIndex, 1);
                    updateCartAndTotal();
                    populateAvailableStockTable();
                }
            });

            // Initial population of available stock table
            populateAvailableStockTable();

            $("#printInvoice").on("click", function () {
                var discount = $("#discount").val();
                var totalAmount = $("#totalAmount").text();
                var calculatedTotal = $("#calculatedTotal").text();

                if (!discount) {
                    discount = 0;
                }

                const printWindow = window.open('', '', 'width=800, height=600');
                printWindow.document.open();
                printWindow.document.write('<!DOCTYPE html>          \
                <html>                                                               \
                <head>                                                               \
                    <meta charset="UTF-8">                                           \
                    <title>Invoice</title>                                           \
                    <style>                                                          \
                        body {                                                       \
                            font-family: Arial, sans-serif;                          \
                        }                                                            \
                        .invoice {                                                   \
                            margin: 0 auto;                                          \
                            width: 98%;                                              \
                        }                                                            \
                        .header {                                                    \
                            text-align: center;                                      \
                            background-color: #f2f2f2;                               \
                            padding: 10px;                                           \
                        }                                                            \
                        .invoice-details {                                           \
                            margin-top: 20px;                                        \
                        }                                                            \
                        .invoice-details h2 {                                        \
                            border-bottom: 1px solid #ddd;                           \
                            padding-bottom: 5px;                                     \
                        }                                                            \
                        .invoice-details .info {                                     \
                            margin-top: 10px;                                        \
                        }                                                            \
                        .invoice-table {                                             \
                            margin-top: 20px;                                        \
                            border-collapse: collapse;                               \
                            width: 100%;                                             \
                        }                                                            \
                        .invoice-table th, .invoice-table td {                       \
                            border: 1px solid #ddd;                                  \
                            padding: 8px;                                            \
                            text-align: left;                                        \
                        }                                                            \
                        .invoice-table th {                                          \
                            background-color: #f2f2f2;                               \
                        }                                                            \
                        .invoice-total {                                             \
                            margin-top: 20px;                                        \
                            text-align: right;                                       \
                        }                                                            \
                        .discount {                                                  \
                            margin-top: 10px;                                        \
                            text-align: right;                                       \
                        }                                                            \
                    </style>                                                         \
                </head>                                                              \
                <body>                                                               \
                    <div class="invoice">                                            \
                        <div class="header">                                         \
                                    <img src="/img/logo.png" style="width: 100px; float: left;"> <h1>PSK Fancy Crackers - Invoice</h1>                           \
                        </div>                                                       \
                        <div class="invoice-details">                                \
                            <h2>Invoice Details</h2>                                 \
                            <div class="info">');

                printWindow.document.write('<p><strong>Date:</strong> ' + getCurrentDateFormatted() + '</p>');

                printWindow.document.write('</div>   \
                        </div>                                       \
                        <table class="invoice-table">                \
                            <thead>                                  \
                                <tr>                                 \
                                    <th>Item</th>                    \
                                    <th>Quantity</th>                \
                                    <th>Unit Price</th>              \
                                    <th>Total</th>                   \
                                </tr>                                \
                            </thead>                                 \
                            <tbody>');
                debugger;
                cart.forEach(item => {
                    const subtotal = item.Product.Price * item.QuantityInCart;

                    printWindow.document.write('<tr>  \
                                            <td>'+ item.Product.Name + '</td>                   \
                                            <td>'+ item.QuantityInCart + '</td>                        \
                                                    <td>₹ '+ item.Product.Price.toFixed(2) + '</td>                   \
                                                    <td>₹ '+ subtotal.toFixed(2) + '</td>                  \
                                </tr>');
                });

                printWindow.document.write('</tbody></table>');

                printWindow.document.write('<div class="invoice-total">\
                                            <p><strong>Total without discount:</strong> '+ totalAmount + '</p>\
                                </div>');

                printWindow.document.write('<div class="discount">\
                                            <p><strong>Discount:</strong>'+ discount + ' %</p>\
                        </div>');

                printWindow.document.write('<div class="invoice-total">\
                                            <p><strong>Total:</strong> '+ calculatedTotal + '</p>\
                        </div>');

                printWindow.document.write('</div>');


                printWindow.document.close();
                printWindow.print();
                printWindow.close();
            });

            // Remove item from the cart when the "Remove" button is clicked
            $("#SaveInvoice").on("click", function () {
                // Create a Sale object with the cart items and other details
                const sale = {
                    saleItems: cart,
                    totalAmount: parseFloat($("#totalAmount").text().replace("₹", "")),
                    discountPercentage: parseFloat($("#discount").val()),
                    discountedTotal: parseFloat($("#calculatedTotal").text().replace("₹", "")),
                    customerId: parseInt($("#SelectedCustomer").val())
                };

                fetch('/Sales/Create', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(sale)
                })
                    .then(response => {
                        if (response.ok) {
                            window.location.href = '/Sales';
                        } else {
                            // Handle errors
                            alert('Failed to save sale data.');
                        }
                    })
                    .catch(error => {
                        alert('Error:', error);
                    });

            });


        });

    </script>
}
